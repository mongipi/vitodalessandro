services:
  strapi:
    container_name: strapi
    build:
      context: ../../services/strapi-cloud-template-blog-aecd06639e
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./.env
    # environment:
    #   DATABASE_CLIENT: postgres
    #   DATABASE_HOST: strapiDB       # <--- nome del servizio DB
    #   DATABASE_PORT: 5432
    #   DATABASE_NAME: strapi
    #   DATABASE_USERNAME: root
    #   DATABASE_PASSWORD: root
    #   JWT_SECRET: tobemodified
    #   ADMIN_JWT_SECRET: tobemodified
    #   APP_KEYS: 8sdh4hsdjs9f2n3jk2j3n2kj3n2,ad28hfjshg2k39d3ks93k2d9
    #   NODE_ENV: development
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      # - ./yarn.lock:/opt/yarn.lock   # opzionale
      # - ./.env:/opt/app/.env        # non necessario
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64   # utile su Mac M1
    restart: unless-stopped
    image: postgres:16.0-alpine
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: strapi
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    driver: bridge
